<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Golang on 专注于Java、Golang、软件架构、项目管理</title>
        <link>http://localhost:1313/tags/golang/</link>
        <description>Recent content in Golang on 专注于Java、Golang、软件架构、项目管理</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 27 Mar 2022 14:04:09 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/golang/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Go1.18：新的切片扩容策略</title>
        <link>http://localhost:1313/posts/golang/go118-new-growslice/</link>
        <pubDate>Sun, 27 Mar 2022 14:04:09 +0800</pubDate>
        
        <guid>http://localhost:1313/posts/golang/go118-new-growslice/</guid>
        <description>&lt;p&gt;随着go 1.18版本的发布，go社区终于迎来了期盼已久的正式泛型语法，然而我在浏览关于1.18的changelog时发现1.18对于slice的扩容策略也做了一些修改，刚好我最近正在看draven大佬的新书也讲到了slice底层的源码的一些运行逻辑，在好奇心的驱使下，想知道社区究竟改动了什么以及为什么作出这些改动，于是翻开1.18的源码，便有了这篇文章。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
